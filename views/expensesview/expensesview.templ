package expensesview

import "github.com/dimitargrozev5/expenses-go-1/internal/models"
import "github.com/dimitargrozev5/expenses-go-1/views/layout"
import "github.com/dimitargrozev5/expenses-go-1/views/components/cards"
import "github.com/dimitargrozev5/expenses-go-1/views/components/inputs"
import "fmt"

// Page data
type ExpensesData struct {
	models.TemplateData
	Expenses []models.Expense
	Tags     []models.Tag
	Accounts []models.Account
}

templ (d ExpensesData) View() {
	@layout.MainLayout(d.TemplateData) {
		@layout.AuthLayout(layout.MainHeader(d.Title), layout.BottomTabs(d.CurrentURLPath)) {
			@cards.AddCard("Add Expense", "/expenses/add", d.DialogOpened("add-expense")) {
				@inputs.CsrfInput(d.CSRFToken)
				@inputs.TextInput(inputs.TextInputProps{
					Label:    "Amount",
					Name:     "amount",
					Type:     "number",
					Required: true,
					Value:    d.Form["add-expense"].Get("amount"),
					Error:    d.Form["add-expense"].Errors.Get("amount"),
				})
				@inputs.TextInput(inputs.TextInputProps{
					Label:    "Date",
					Name:     "date",
					Type:     "datetime-local",
					Required: true,
					Value:    d.Form["add-expense"].Get("date"),
					Error:    d.Form["add-expense"].Errors.Get("date"),
				})
				@inputs.TagsInput(d.Tags, inputs.TagsInputProps{
					Name:     "tags",
					Label:    "Tags",
					Required: true,
					Value:    d.Form["add-expense"].Get("tags"),
					Error:    d.Form["add-expense"].Errors.Get("tags"),
				})
				@inputs.AccountSelect(d.Accounts, inputs.AccountSelectProps{
					Label:    "From Account",
					Name:     "from_account",
					Required: true,
					Value:    d.Form["add-expense"].Get("from_account"),
					Error:    d.Form["add-expense"].Errors.Get("from_account"),
				})
			}
			for _, expense := range d.Expenses {
				@ExpenseCard(expense, d.Tags, d.Accounts, d.Form[fmt.Sprintf("edit-%d", expense.ID)], d.CSRFToken)
			}
		}
	}
}
