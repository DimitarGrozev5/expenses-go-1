package accountsview

import "github.com/dimitargrozev5/expenses-go-1/internal/models"
import "github.com/dimitargrozev5/expenses-go-1/views/layout"
import "github.com/dimitargrozev5/expenses-go-1/views/components/cards"
import "github.com/dimitargrozev5/expenses-go-1/views/components/inputs"

// Page data
type AccountsData struct {
	models.TemplateData
	Accounts  []models.Account
	FreeFunds float64
	Tags      []models.Tag
}

templ (d AccountsData) View() {
	@layout.MainLayout(d.TemplateData) {
		@layout.AuthLayout(layout.MainHeader(d.Title), layout.BottomTabs(d.CurrentURLPath)) {
			<div class="flex flex-row items-stretch gap-2">
				@cards.AddCard("Add New Account", "/accounts/add", d.DialogOpened("add-account")) {
					@inputs.CsrfInput(d.CSRFToken)
					@inputs.TextInput(inputs.TextInputProps{
						Label:    "Name",
						Name:     "name",
						Type:     "text",
						Required: true,
						Value:    d.Form["add-account"].Get("name"),
						Error:    d.Form["add-account"].Errors.Get("name"),
					})
				}
				@cards.AddCard("Add Free Funds", "/accounts/modify-free-funds", d.DialogOpened("modify-free-funds")) {
					@inputs.CsrfInput(d.CSRFToken)
					@inputs.TextInput(inputs.TextInputProps{
						Label:    "Amount",
						Name:     "amount",
						Type:     "number",
						Required: true,
						Value:    d.Form["modify-free-funds"].Get("amount"),
						Error:    d.Form["modify-free-funds"].Errors.Get("amount"),
					})
					@inputs.AccountSelect(d.Accounts, inputs.AccountSelectProps{
						Label:    "To Account",
						Name:     "to-account",
						Required: true,
						Value:    d.Form["modify-free-funds"].Get("to-account"),
						Error:    d.Form["modify-free-funds"].Errors.Get("to-account"),
					})
					@inputs.TagsInput(d.Tags, inputs.TagsInputProps{
						Label:     "Tag",
						Name:      "tag",
						Required:  true,
						Value:     d.Form["modify-free-funds"].Get("tag"),
						Error:     d.Form["modify-free-funds"].Errors.Get("tag"),
						SingleTag: true,
					})
				}
			</div>
			@FreeFunds(d.FreeFunds)
			for index, account := range d.Accounts {
				@AccountCard(account, index == 0, index == len(d.Accounts)-1, d.CSRFToken)
			}
		}
	}
}
